{"version":3,"sources":["logo.svg","components/Talents.js","components/Jobs.js","components/common/Footer.js","components/corporation/CorporationList.js","components/corporation/CorporationIndex.js","components/corporation/CorporationConfig.js","components/common/WithErrorContent.js","components/corporation/CorporationJobBoards/index.js","components/common/SearchBar.js","components/common/Header.js","components/social/index.js","components/bootstrap-lab/index.js","App.js","serviceWorker.js","index.js"],"names":["Talents","props","useState","talents","setTalents","phrase","useEffect","fetch","then","rsp","json","catch","e","console","error","results","filter","talent","name","match","RegExp","map","key","length","to","className","jobs","Jobs","job","footerStyles","makeStyles","root","background","border","boxShadow","color","padding","Footer","classNames","classes","classnames","href","AgentCompaniesList","items","linkClassNames","url","title","agentCompanies","AgentCompanies","result","company","CorporationTags","WithErrorContent","children","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","JobBoards","isLoading","setIsLoading","setError","jobBoards","setJobBoards","newJobBoards","corporationRef","collection","getDocs","forEach","doc","log","id","JSON","stringify","data","tags","includes","push","effectQuery","board","candidatesNumber","jobsNumber","Intl","NumberFormat","notation","format","SearchBar","value","onChange","placeholder","Header","handlePhraseChange","defaultPosts","time","Date","getTime","Math","floor","random","content","Social","posts","setPosts","postContent","setPostContent","handleSubmit","required","autoFocus","onKeyDown","keyCode","metaKey","target","type","onClick","disabled","_item","idx","fromNow","BootStrapLabTooltip","class","Home","App","setPhrase","style","minHeight","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa11f5d0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport function Talents(props) {\n  const [talents, setTalents] = useState([]);\n  const { phrase } = props;\n  useEffect(() => {\n    fetch(\"/react-job-matching/data/talents.json\")\n      .then((rsp) => rsp.json())\n      .then((rsp) => setTalents(rsp))\n      .catch((e) => console.error(e));\n  }, []);\n  const results = talents\n    .filter((talent) =>\n      phrase ? talent.name.match(new RegExp(phrase, \"i\")) : true\n    )\n    .map((talent, key) => <li key={key}>{talent.name}</li>);\n  if (!results.length) return null;\n  return (\n    <div>\n      <Link to=\"talents\">\n        <h2 className=\"d-inline-block\">Talents</h2>\n      </Link>\n      <ul>{results}</ul>\n    </div>\n  );\n}\n","import React from \"react\";\nconst jobs = [\"front end\", \"back end\", \"full stack\"];\n\nexport function Jobs(props) {\n  const { phrase } = props;\n  const results = jobs\n    .filter((job) => (phrase ? job.match(new RegExp(phrase, \"i\")) : true))\n    .map((job, key) => <li key={key}>{job}</li>);\n  if (!results.length) return null;\n  return (\n    <div>\n      <h2>Jobs</h2>\n      <ul>{results}</ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\n\nconst footerStyles = makeStyles({\n  root: {\n    background: \"#333\",\n    border: 0,\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n    color: \"white\",\n    padding: \"30px\",\n    \"& a\": {\n      color: \"white\",\n    },\n  },\n});\n\nexport default function Footer({ classNames }) {\n  const classes = footerStyles();\n  return (\n    <div className={classnames(\"footer\", classes.root, classNames)}>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n            <div>Job Boards</div>\n            <ul>\n              <li>\n                <a href=\"https://hired.com/x/1cebk\">Hired</a>\n              </li>\n              <li>\n                <a href=\"https://woo.io\">Woo.io</a>\n              </li>\n              <li>\n                <a href=\"https://www.linkedin.com\">LinkedIn</a>\n              </li>\n              <li>\n                <a href=\"https://angel.co\">Angel.co</a>\n              </li>\n              <li>\n                <a href=\"https://www.indeed.com/\">indeed</a>\n              </li>\n              <li>\n                <a href=\"https://www.dice.com/\">Dice</a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col-md-3\">\n            <div>Interview Preperation</div>\n            <ul>\n              <li>\n                <a href=\"http://interviewcake.com\">InterviewCake</a>\n              </li>\n              <li>\n                <a href=\"https://www.pramp.com/#/\">Pramp</a>\n              </li>\n              <li>\n                <a href=\"https://leetcode.com\">LeetCode</a>\n              </li>\n              <li>\n                <a href=\"https://www.hackerrank.com\">HackerRank</a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col-md-3\">\n            <div>Agents</div>\n            <ul>\n              <li>\n                <a href=\"https://www.teksystems.com/en\">TEKSystems</a>\n              </li>\n              <li>\n                <a href=\"https://www.modis.com/\">modis</a>\n              </li>\n              <li>\n                <a href=\"http://xoriant.com\">xoriant</a>\n              </li>\n              <li>\n                <a href=\"http://www.collabera.com/\">Collabera</a>\n              </li>\n              <li>\n                <a href=\"http://www.infinity-cs.com\">\n                  Infinity Consulting Solutions\n                </a>\n              </li>\n              <li>\n                <a href=\"https://www.ustechsolutions.com/\">US Tech Solutions</a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col-md-3\">\n            <div>Join Us</div>\n            <ul>\n              <li>Welcome to fork and submit pull request.</li>\n              <li>\n                Email me if you want to join the team weijingjaylin(at)gmail.com\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nexport function AgentCompaniesList({ items, linkClassNames }) {\n  return items && items.length ? (\n    <ul>\n      {items.map((items, key) => (\n        <li key={key}>\n          {!items.url ? (\n            items.title\n          ) : (\n            <a href={items.url} className={classNames(linkClassNames)}>\n              {items.title}\n            </a>\n          )}\n        </li>\n      ))}\n    </ul>\n  ) : null;\n}\n","import React from \"react\";\nimport { AgentCompaniesList } from \"./CorporationList\";\nexport const agentCompanies = [\n  { title: \"TEKSystems\", url: \"https://www.teksystems.com/en\" },\n  { title: \"modis\", url: \"https://www.modis.com/\" },\n  { title: \"xoriant\", url: \"http://xoriant.com\" },\n  { title: \"Collabera\", url: \"http://www.collabera.com/\" },\n  { title: \"Infinity Consulting Solutions\", url: \"http://www.infinity-cs.com\" },\n  { title: \"US Tech Solutions\", url: \"https://www.ustechsolutions.com/\" },\n  { title: \"TrustBrain\", url: \"https://app.usebraintrust.com/r/weijing1/\" },\n];\n\nexport function AgentCompanies(props) {\n  const { phrase } = props;\n  const result = agentCompanies.filter((company) =>\n    phrase ? company.title.match(new RegExp(phrase, \"i\")) : true\n  );\n\n  if (!result.length) return null;\n  return (\n    <div>\n      <h2>Agent Companies</h2>\n      <AgentCompaniesList items={result} />\n    </div>\n  );\n}\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyBddjN4Z0RnDW8fu8qwoAZ9oy_pENPm6Fc\",\n  authDomain: \"dk-corporation.firebaseapp.com\",\n  databaseURL: \"https://dk-corporation-default-rtdb.firebaseio.com\",\n  projectId: \"dk-corporation\",\n  storageBucket: \"dk-corporation.appspot.com\",\n  messagingSenderId: \"889307756555\",\n  appId: \"1:889307756555:web:b6a78034f82ed6b9f82f0e\",\n  measurementId: \"G-BM1VNZNS61\",\n};\n\nexport const CorporationTags = {\n  RECRUITING_SAAS: \"recruiting SAAS\",\n  CANDIDATE_POOL: \"candidate pool\",\n};\n","export default function WithErrorContent({ children, error }) {\n  return error ? (\n    <div className=\"alert alert-danger\">\n      Something goes wrong, please come back later.\n    </div>\n  ) : (\n    <>{children}</>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport {\n  getFirestore,\n  collection,\n  getDocs,\n  query,\n  where,\n} from \"firebase/firestore\";\nimport { CorporationTags, firebaseConfig } from \"../CorporationConfig\";\nimport WithErrorContent from \"../../common/WithErrorContent\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\nexport function JobBoards(props) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [jobBoards, setJobBoards] = useState([]);\n  const { phrase } = props;\n\n  useEffect(() => {\n    async function effectQuery() {\n      const newJobBoards = [];\n      const corporationRef = collection(db, \"corporation\");\n      try {\n        const querySnapshot = await getDocs(corporationRef);\n\n        querySnapshot.forEach((doc) => {\n          console.log(`${doc.id} => ${JSON.stringify(doc.data())}`);\n          const { tags } = doc.data();\n\n          if (\n            tags.includes(CorporationTags.CANDIDATE_POOL) &&\n            tags.includes(CorporationTags.RECRUITING_SAAS)\n          )\n            newJobBoards.push(doc.data());\n        });\n      } catch (e) {\n        setError(e);\n      }\n      setJobBoards(newJobBoards);\n      setIsLoading(false);\n    }\n    effectQuery();\n  }, []);\n\n  const results = jobBoards\n    .filter((board) => (phrase ? board.match(new RegExp(phrase, \"i\")) : true))\n    .map(({ name, url, candidatesNumber, jobsNumber }, key) => (\n      <div className=\"col-4 my-2\">\n        <div className=\"card\" key={key}>\n          <div className=\"card-body\">\n            <div className=\"card-title h5\">\n              {url ? <a href={url}>{name}</a> : { name }}\n            </div>\n            <div className=\"card-text\">\n              {candidatesNumber && (\n                <div\n                  title=\"candidate number\"\n                  className=\"ps-1\"\n                  data-toggle=\"tooltip\"\n                  data-placement=\"top\"\n                >\n                  Candidates:{\" \"}\n                  {new Intl.NumberFormat(\"en\", { notation: \"compact\" }).format(\n                    candidatesNumber\n                  )}\n                </div>\n              )}\n              {jobsNumber && (\n                <div\n                  title=\"candidate number\"\n                  className=\"ps-1\"\n                  data-toggle=\"tooltip\"\n                  data-placement=\"top\"\n                >\n                  Jobs:{\" \"}\n                  {new Intl.NumberFormat(\"en\", { notation: \"compact\" }).format(\n                    jobsNumber\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    ));\n\n  return (\n    <div>\n      <h2>Job Boards</h2>\n      {isLoading ? (\n        <div>Loading ...</div>\n      ) : (\n        <WithErrorContent error={error}>\n          <div className=\"row my-3\">\n            {results.length ? results : \"empty content\"}\n          </div>\n        </WithErrorContent>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function SearchBar(props) {\n  return (\n    <input\n      className=\"form-control\"\n      value={props.phrase}\n      onChange={props.onChange}\n      placeholder=\"Search\"\n    />\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { SearchBar } from \"./SearchBar\";\n\nexport default function Header({ phrase, handlePhraseChange }) {\n  return (\n    <div className=\"header d-flex justify-content-between align-items-center\">\n      <Link to=\"/\">\n        <h1 className=\"my-3\">JOB MATCHING</h1>\n      </Link>\n      <div className=\"d-flex  h-100\">\n        <SearchBar value={phrase} onChange={handlePhraseChange} />\n      </div>\n    </div>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport Moment from \"react-moment\";\n\nconst defaultPosts = [\n  {\n    time: new Date().getTime() - Math.floor(Math.random() * 1000000),\n    content: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n  },\n  {\n    time: new Date().getTime() - Math.floor(Math.random() * 10000000),\n    content: \"consectetur adipiscing elit\",\n  },\n];\n\nconst MAX_LENGTH = 100;\n\nexport default function Social() {\n  const [posts, setPosts] = useState(defaultPosts);\n  const [postContent, setPostContent] = useState(\"\");\n\n  const handleSubmit = () => {\n    if (!postContent) return;\n\n    setPosts([\n      {\n        time: new Date().getTime(),\n        content: postContent,\n      },\n      ...posts,\n    ]);\n\n    setPostContent(\"\");\n  };\n\n  const handleTexareaKeydown = (e) => {\n    if (e.keyCode === 13 && e.metaKey) {\n      handleSubmit();\n    }\n  };\n\n  const handleTextAreaChange = (e) => {\n    console.log(\"handleTextAreaChange\");\n    setPostContent(e.target.value);\n  };\n\n  return (\n    <div>\n      <textarea\n        required\n        className=\"form-control\"\n        autoFocus\n        value={postContent}\n        onKeyDown={handleTexareaKeydown}\n        onChange={handleTextAreaChange}\n      />\n      <div className=\"d-flex justify-content-end\">\n        <button\n          type=\"submit\"\n          className=\"btn mt-2\"\n          onClick={handleSubmit}\n          disabled={!postContent.length}\n        >\n          Post\n        </button>\n      </div>\n      {posts.length &&\n        posts\n          .filter((_item, idx) => idx < MAX_LENGTH)\n          .map(({ time, content }, idx) => (\n            <div key={idx} className=\"mt-3 border-bottom pb-3\">\n              <small className=\"text-muted\">\n                <Moment fromNow>{time}</Moment>\n              </small>\n              <div>{content}</div>\n            </div>\n          ))}\n    </div>\n  );\n}\n","export default function BootStrapLabTooltip() {\n  return (\n    <button\n      type=\"button\"\n      class=\"btn btn-secondary\"\n      data-toggle=\"tooltip\"\n      data-placement=\"top\"\n      title=\"Tooltip on top\"\n    >\n      Tooltip on top\n    </button>\n  );\n}\n","import { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Talents } from \"./components/Talents\";\nimport { Jobs } from \"./components/Jobs\";\nimport Footer from \"./components/common/Footer\";\nimport { AgentCompanies as CorporationIndex } from \"./components/corporation/CorporationIndex\";\nimport { JobBoards } from \"./components/corporation/CorporationJobBoards\";\nimport Header from \"./components/common/Header\";\nimport { SearchBar } from \"./components/common/SearchBar\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Social from \"./components/social\";\nimport BootStrapLabTooltip from \"./components/bootstrap-lab\";\n\nexport function Home({ phrase }) {\n  return (\n    <>\n      <Talents phrase={phrase} />\n      <Jobs phrase={phrase} />\n      <JobBoards phrase={phrase} />\n      <CorporationIndex phrase={phrase} />\n    </>\n  );\n}\n\nfunction App() {\n  const [phrase, setPhrase] = useState(\"\");\n  let handlePhraseChange = (e) => {\n    console.log(e.target.value);\n    setPhrase(e.target.value);\n  };\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"container\" style={{ minHeight: \"calc(100vh - 239px)\" }}>\n          <Header phrase={phrase} handlePhraseChange={handlePhraseChange} />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Home phrase={phrase} />\n              </Route>\n              <Route path=\"/talents\">\n                <Talents phrase={phrase} />\n              </Route>\n              <Route path=\"/story/social\" component={Social} />\n              <Route\n                path=\"/bootstrap-lab/tooltip\"\n                component={BootStrapLabTooltip}\n              />\n            </Switch>\n          </div>\n        </div>\n        <Footer classNames=\"mt-3\" />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}